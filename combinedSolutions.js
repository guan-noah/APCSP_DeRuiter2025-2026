{"intMax":"true","countXX-code":"function countXX(str)\n{\n  let count = 0; \n  for(let i = 0; i < str.length - 1; i++)\n  {\n    if(str.substring(i, i + 2) == \"xx\")\n       count++;\n  }\n  return count;\n}","noTriples-code":"function noTriples(nums)\n{\n  for(let i = 0; i < nums.length - 2; i++)\n  {\n    if(nums[i] == nums[i+1] && nums[i] == nums[i+2])\n    {\n      return false;\n    }\n  }\n  return true;\n}","arrayFront9-code":"function arrayFront9(nums)\n{\n  for(let i = 0; i < 4; i++)\n  {\n    if(nums[i] == 9)\n      return true;\n  }\n  return false;\n}","monkeyTrouble-code":"function monkeyTrouble(aSmile, bSmile)\n{\n  //return (aSmile == bSmile);\n  if(aSmile == true && bSmile == true)\n  {\n    return true;\n  }\n  if(aSmile == false && bSmile == false) \n  {\n    return true;\n  }\n  return false;\n}","altPairs-code":"function altPairs(str)\n{\n  let result = \"\";\n  \n  for(let i = 0; i < str.length; i+=3)\n  {\n    result += str.charAt(i);\n    i++;\n    result += str.charAt(i);\n  }\n  \n  return result;\n}","has271":"true","startHi":"true","makeAbba-code":"function makeAbba(a, b)\n{\n  return a + b + b + a;\n}","stringYak-code":"function stringYak(str)\n{\n  let result = \"\";\n  \n  for(let i = 0; i < str.length; i++)\n  {\n    if(str.substring(i, i + 3) == \"yak\")\n      i += 2;//skips 3 chars ahead\n    else\n      result += str.charAt(i);\n  }\n  \n  return result;\n}","loneTeen-code":"function loneTeen(a, b)\n{\n  return Boolean(between(13, 19, a) ^ between(13, 19, b));\n}\nfunction between(min, max, i)\n{\n  return min <= i && i <= max;\n}","posNeg":"true","stringSplosion":"true","mixStart":"true","monkeyTrouble":"true","noTriples":"true","extraEnd-code":"function extraEnd(str)\n{\n  let end2 = str.substring(str.length - 2)\n  return end2 + end2 + end2;\n}","arrayCount9-code":"function arrayCount9(nums)\n{\n  let result = 0;\n  \n  for(let i = 0; i < nums.length; i++)\n  {\n    if(nums[i] == 9)\n      result++;\n  }\n  \n  return result; \n}","makeOutWord-code":"function makeOutWord(out, word)\n{\n  return out.substring(0, 2) + word + out.substring(2);\n}","everyNth-code":"function everyNth(str, n)\n{\n  let result = \"\";//build \n  let index = 0;\n  while(index < str.length)//not <= bec. str.length is out of bounds\n  {\n    result += str.charAt(index);//could also use .append() but DeRuiter doesn't want that\n    index += n;\n  }\n  \n  return result;\n}","intMax-code":"function intMax(a, b, c)\n{\n  return Math.max(a, b, c);\n}","front3-code":"function front3(phrase)\n{\n  if(phrase.length <= 3)\n      return phrase + phrase + phrase;\n  let front = phrase.substring(0, 3);\n    //this is a value assignment. don't slow down computer \n    //by using up memory in beginning (if you can)\n  return front + front + front; //iterate: use a loop. \n    //but it's good enough here that we just add it to itself\n}","array123":"true","frontTimes-code":"function frontTimes(str, n)\n{\n  let result = \"\";\n  \n  for(let i = 0; i < n; i++)\n  {\n    result += str.substring(0, 3);\n  }\n  \n  return result;\n}","makes10-code":"function makes10(a, b)\n{\n  if(a == 10)\n    return true;\n  if(b == 10)//else if not necessary in this case\n    return true;\n  if(a+b == 10)//our catch, returning this is only possible because there's no more code left after this\n    return true;\n  return false;\n  //return a == 10 || b == 10 || a+b == 10;\n}","stringX-code":"function stringX(str)\n{\n  if(str.length == 0)\n    return \"\";\n  \n  let result = str.charAt(0);\n  \n  for(let i = 1; i < str.length - 1; i++)\n  {\n    if(str.charAt(i) != 'x')\n    {\n      result += str.charAt(i);\n    }\n  }\n  \n  result += str.charAt(str.length - 1);\n  \n  return result;\n}","in1020":"true","front22":"true","in3050":"true","helloName":"true","mixStart-code":"function mixStart(str)\n{\n  return str.substring(1, 3) === 'ix';\n}","makeTags-code":"function makeTags(tag, word)\n{\n  return '<' + tag + '>' + word + '<' + tag + '/>';\n}","max1020":"true","stringYak":"true","extraEnd":"true","startHi-code":"function startHi(str)\n{\n  return str.startsWith('hi');\n}","makes10":"true","stringBits":"true","makeOutWord":"true","front3":"true","hasTeen-code":"function hasTeen(a, b, c)\n{\n  return between(13, 19, a) || between(13, 19, b)\n    || between(13, 19, c);\n}\nfunction between(min, max, i)\n{\n  return min <= i && i <= max;\n}","missingChar-code":"function missingChar(str, n)\n{\n  return str.substring(0, n) + str.substring(n + 1);\n}","startOz":"true","stringE-code":"function stringE(str)\n{\n  let countE = 0;//check the test cases throughout \n  for(let i = 0; i < str.length; i++)\n  {\n    if(str.charAt(i) == 'e')\n      countE++;\n  }\n\n  return (1 <= countE && countE <= 3);\n}","sumDouble-code":"function sumDouble(a, b)\n{\n  if(a == b)\n    return 2*(a + b);\n  return a + b;\n}","backAround-code":"function backAround(str)\n{\n  let last = str.charAt(str.length - 1);\n  return last + str + last;\n}","or35":"true","stringTimes-code":"function stringTimes(str, n)\n{\n  let result = \"\";\n  for(let i = 0; i < n; i++)\n  {\n    result += str;\n  }\n  \n  return result;\n}","last2":"true","in1020-code":"function in1020(a, b)\n{\n  return between(10, 20, a) || between(10, 20, b);\n}\nfunction between(min, max, i)\n{\n  return (min <= i && i <= max);\n}","endUp":"true","doubleX-code":"function doubleX(str)\n{\n  for(let i = 0; i < str.length - 1; i++)\n  {\n    if(str.charAt(i) == 'x')\n      return str.charAt(i + 1) == 'x';\n  }\n  return false;\n}","frontTimes":"true","parrotTrouble-code":"function parrotTrouble(talking, hour)\n{\n  if(talking == true)\n    if (hour < 7 || hour > 20)//AND the hour condition is met\n      return true;\n  return false;\n  //return talking && (hour < 7 || hour > 20);\n}","diff21-code":"function diff21(n)\n{\n  if(n > 21)\n    return 2 * (n - 21);//single statement; don't need braces\n  return 21 - n;//could also use Math.abs(); but not needed\n}","stringSplosion-code":"function stringSplosion(str)\n{\n  let result = \"\";\n  \n  for(int i = 0; i < str.length; i++)\n  {\n    result += str.substring(0, i);\n  }\n  \n  return result;\n}\n","front22-code":"function front22(str)\n{\n  return get2(str) + str + get2(str);\n}\nfunction get2(str)\n{\n  return str.substring(0, 2);\n}","icyHot":"true","stringE":"true","icyHot-code":"function icyHot(temp1, temp2)\n{\n  return temp1*temp2 < -100;\n}","close10":"true","nearHundred":"true","makeAbba":"true","doubleX":"true","max1020-code":"function max1020(a, b)\n{\n  if(a >= 10 && a <= 20)//put an 'or' to make sure either \n    //a or b is in the range \n  {\n    if(b >= 10 && b <= 20) \n      return Math.max(a, b);\n    return a;\n  }\n  if(b >= 10 && b <= 20)\n  {\n    return b;\n  }\n  return 0;\n}","endUp-code":"function endUp(str)\n{\n  if(str.length < 3)\n  {\n    return str.toUpperCase(); //a return is a kickout \n  }\n  let end3 = str.substring(str.length-3);\n  return str.replace(end3, end3.toUpperCase());\n}","hasTeen":"true","close10-code":"function close10(a, b)\n{\n  let diffA = Math.abs(a-10);\n  let diffB = Math.abs(b-10);\n  if(diffA > diffB)\n    return b;\n  else if(diffA < diffB)\n    return a;\n  return 0;\n}","or35-code":"function or35(n)\n{\n  return n % 3 == 0 || n % 5 == 0;\n}","countXX":"true","sleepIn":"true","startOz-code":"function startOz(str)\n{\n  var first = '';\n  var second = '';\n  if(str.charAt(0) === 'o')\n  {\n    first = 'o';\n  }\n  if(str.charAt(1) === 'z')\n  {\n    second = 'z';\n  }\n  return first + second;\n}","arrayCount9":"true","delDel":"true","nearHundred-code":"function nearHundred(n)\n{\n  if(n >= 90 && n <= 110)//when starting out, DeRuiter doesn't want long compound statements that run on.\n    return true;\n  return (n >= 190 && n <= 210);\n  //return(Math.abs(n-100) <= 10 || Math.abs(n-200) <= 10);\n  //you CAN break it up right after \"and\" or \"or\" on another line\n}","parrotTrouble":"true","stringMatch":"true","sumLimit-code":"function sumLimit(a, b)\n{\n    let sumDig = \"\" + a + b;\n    let aDig = a;\n    \n    if(sumDig > aDig)\n        return a+b;\n    return a;    \n}","frontBack-code":"function frontBack(str)\n{\n  let lastIndex = str.length-1;\n  if(str.length <= 1) //make special code for the special case \n    return str;\n  return str.charAt(lastIndex) + \n    str.substring(1, lastIndex) + \n    str.charAt(0);\n}","stringTimes":"true","has271-code":"function has271(nums)\n{\n  for(let i = 0; i < nums.length; i++)\n  {\n    if(nums[i] == 2 && nums[i+1] == 7 && nums[i+2] == 1)\n      return true;\n  }\n  return false;\n}","altPairs":"true","in3050-code":"function in3050(a, b)\n{\n  return inRange(30, 40, a, b) || inRange(40, 50, a, b);\n  //nest work if too many compound statements \n}\nfunction inRange(min, max, num1, num2)\n{\n  return between(min, max, num1) && between(min, max, num2);\n}\nfunction between(min, max, num)\n{\n  return min <= num && num <= max;\n}","posNeg-code":"function posNeg(a, b, negative)\n{\n  if(negative)\n  {\n    return (a < 0 && b < 0);\n  }\n  else\n    return ((a < 0 && b > 0) || (a > 0 && b < 0));\n  //return (a * b < 0);    \n}","stringBits-code":"function stringBits(str)\n{\n  let result = \"\";\n  \n  for(let i = 0; i < str.length; i += 2)\n  {\n    result += str.charAt(i);\n  }\n  \n  return result;\n}","notString":"true","array667":"true","sumDouble":"true","array123-code":"function array123(nums)\n{\n  for(let i = 0; i < nums.length - 3; i++)\n  {\n    if(nums[i] == 1 && nums[i+1] == 2 && nums[i+2] == 3)\n      return true;\n  }\n  return false;\n}","arrayFront9":"true","last2-code":"function last2(str)\n{\n  let result = 0;\n  \n  //if string is too short, just return 0 \n  if(str.length <= 3)\n    return 0;\n  //look at last two chars, and compare them to all other chars \n  let last2 = str.substring(str.length-2);\n  \n  for(let i = 0; i < str.length-2; i++)// - 3 for no overlap; - 2 if it overlaps (which it does)\n  {\n    if(last2 == str.substring(i, i+2))\n      result++;\n  }\n  \n  return result;\n}","lastDigit-code":"function lastDigit(a, b)\n{\n  return a % 10 === b % 10;\n}","array667-code":"function array667(nums)\n{\n  let count = 0;\n  \n  for(let i = 0; i < nums.length - 1; i++)\n  {\n    if(nums[i] == 6) \n    {\n      if(nums[i+1] == 6 || nums[i+1] == 7)\n        count++;\n    }\n  }\n  \n  return count;\n}","delDel-code":"function delDel(str)\n{\n  if(str.startsWith('del', 1))\n    return str.replace('del', '');\n    //return str.charAt(0).concat(str.substring(4));\n  return str;\n}","everyNth":"true","stringX":"true","sleepIn-code":"function sleepIn(weekday, vacation)\n{\n  return (vacation == true || weekday == false);\n}","helloName-code":"function helloName(name)\n{\n  return \"Hello \" + name + \"!\";\n}","loneTeen":"true","missingChar":"true","notString-code":"function notString(str)\n{\n  //good habit to check the length; but javascript \n  //doesn't throw the error (has internal checking)\n  if(str.length >= 3 && str.substring(0, 3) == \"not\")\n  {\n    return str;\n  }\n  return \"not \" + str;\n}","lastDigit":"true","stringMatch-code":"function stringMatch(a, b)\n{\n  let count = 0;\n  \n  for(let i = 0; i < Math.min(a.length, b.length)-1; i++)\n  {\n    if(a.substring(i, i+2) == b.substring(i, i+2))\n        count++;\n  }\n  \n  return count;\n}","backAround":"true","diff21":"true","frontBack":"true"}